---
http_interactions:
- request:
    method: post
    uri: https://bugzilla.gnome.org/xmlrpc.cgi
    body:
      encoding: UTF-8
      string: '<?xml version="1.0" ?><methodCall><methodName>Bug.attachments</methodName><params><param><value><struct><member><name>ids</name><value><array><data><value><i4>679745</i4></value></data></array></value></member><member><name>exclude_fields</name><value><array><data><value><string>data</string></value></data></array></value></member></struct></value></param></params></methodCall>

'
    headers:
      User-Agent:
      - XMLRPC::Client (Ruby 2.5.0)
      Content-Type:
      - text/xml; charset=utf-8
      Content-Length:
      - '381'
      Connection:
      - keep-alive
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 23 Oct 2018 10:50:50 GMT
      Server:
      - Apache/2.4.6 (Red Hat Enterprise Linux)
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Set-Cookie:
      - Bugzilla_login_request_cookie=YUL53GJNuK; path=/; secure; HttpOnly
      Content-Length:
      - '1730'
      Content-Type:
      - text/xml
      Soapserver:
      - SOAP::Lite/Perl/1.1
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Access-Control-Allow-Origin:
      - https://bugzilla.gnome.org
      Connection:
      - close
    body:
      encoding: UTF-8
      string: '<?xml version="1.0" encoding="UTF-8"?><methodResponse><params><param><value><struct><member><name>attachments</name><value><struct
        /></value></member><member><name>bugs</name><value><struct><member><name>679745</name><value><array><data><value><struct><member><name>is_private</name><value><int>0</int></value></member><member><name>flags</name><value><array><data
        /></array></value></member><member><name>creator</name><value><string>felipeborges@gnome.org</string></value></member><member><name>last_change_time</name><value><dateTime.iso8601>20160613T13:38:14</dateTime.iso8601></value></member><member><name>bug_id</name><value><int>679745</int></value></member><member><name>description</name><value><string>user-accounts:
        use Password Login instead of Automatic Login</string></value></member><member><name>size</name><value><int>8559</int></value></member><member><name>attacher</name><value><string>felipeborges@gnome.org</string></value></member><member><name>content_type</name><value><string>text/plain</string></value></member><member><name>file_name</name><value><string>user-accounts-use-Password-Login-instead-of-Automa.patch</string></value></member><member><name>summary</name><value><string>user-accounts:
        use Password Login instead of Automatic Login</string></value></member><member><name>id</name><value><int>329690</int></value></member><member><name>creation_time</name><value><dateTime.iso8601>20160613T12:34:00</dateTime.iso8601></value></member><member><name>is_patch</name><value><int>1</int></value></member><member><name>is_obsolete</name><value><int>0</int></value></member></struct></value></data></array></value></member></struct></value></member></struct></value></param></params></methodResponse>'
    http_version: 
  recorded_at: Tue, 23 Oct 2018 10:50:51 GMT
- request:
    method: post
    uri: https://bugzilla.gnome.org/xmlrpc.cgi
    body:
      encoding: UTF-8
      string: '<?xml version="1.0" ?><methodCall><methodName>Bug.attachments</methodName><params><param><value><struct><member><name>attachment_ids</name><value><array><data><value><i4>329690</i4></value></data></array></value></member><member><name>include_fields</name><value><array><data><value><string>data</string></value></data></array></value></member></struct></value></param></params></methodCall>

'
    headers:
      User-Agent:
      - XMLRPC::Client (Ruby 2.5.0)
      Content-Type:
      - text/xml; charset=utf-8
      Content-Length:
      - '392'
      Connection:
      - keep-alive
      Cookie:
      - Bugzilla_login_request_cookie=YUL53GJNuK
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 23 Oct 2018 10:50:50 GMT
      Server:
      - Apache/2.4.6 (Red Hat Enterprise Linux)
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Content-Length:
      - '11813'
      Content-Type:
      - text/xml
      Soapserver:
      - SOAP::Lite/Perl/1.1
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Access-Control-Allow-Origin:
      - https://bugzilla.gnome.org
      Connection:
      - close
    body:
      encoding: UTF-8
      string: <?xml version="1.0" encoding="UTF-8"?><methodResponse><params><param><value><struct><member><name>attachments</name><value><struct><member><name>329690</name><value><struct><member><name>data</name><value><base64></base64></value></member></struct></value></member></struct></value></member><member><name>bugs</name><value><struct
        /></value></member></struct></value></param></params></methodResponse>
    http_version: 
  recorded_at: Tue, 23 Oct 2018 10:50:52 GMT
recorded_with: VCR 4.0.0
